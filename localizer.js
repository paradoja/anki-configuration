function update () {
  const t11n = {"Deutsch":
                { vocabulary: {passive: "Vokabular", active: "vocabulario", image: "‚úè"},
                  expression: {passive: "Ausdr√ºck", active: "expresi√≥n", image: "üë≠"},
                  pronunciation: {passive: "Aussprache", active: "pronunciaci√≥n", image: "üó£"},
                  fillInTheBlanks: {passive: "F√ºlle die L√ºken aus", topic:", zum Thema", image: "‚éÅ"},
                  translation: {passive: "den Satz √ºbersetz", active: "traduce la frase", image: "üí±"},
                  rewrite: {passive: "den Satz umformulieren", active: "den Satz umformulieren", image: "‚úç"}},
                "–ë—É–ª–≥–∞—Ä—Å–∫–∏":
                { vocabulary: {passive: "—Ä–µ—á–Ω–∏–∫–æ–≤", active: "vocabulario", image: "‚úè"},
                  expression: {passive: "", active: "", image: "üë≠"},
                  pronunciation: {passive: "", active: "", image: "üó£"},
                  fillInTheBlanks: {passive: "", topic:"", image: "‚éÅ"},
                  translation: {passive: "", active: "", image: "üí±"},
                  rewrite: {passive: "", active: "", image: "‚úç"}},
                "Portugu√™s":
                { vocabulary: {passive: "vocabul√°rio", active: "vocabulario", image: "‚úè"},
                  expression: {passive: "", active: "", image: "üë≠"},
                  pronunciation: {passive: "", active: "", image: "üó£"},
                  fillInTheBlanks: {passive: "", topic:"", image: "‚éÅ"},
                  translation: {passive: "", active: "", image: "üí±"},
                  rewrite: {passive: "", active: "", image: "‚úç"}}
               };
  const grammar = {"Deutsch":
                   { general: { passive: "Grammatik", active: "gram√°tica"},
                     vocabulary: {passive: "Grammatik - Vokabular", active: "gram√°tica - vocabulario", image: "üîß"}},
                   "–ë—É–ª–≥–∞—Ä—Å–∫–∏":
                   { general: { passive: "–≥—Ä–∞–º–∞—Ç–∏–∫–∞", active: "gram√°tica"},
                     vocabulary: {passive: "–≥—Ä–∞–º–∞—Ç–∏–∫–∞ - —Ä–µ—á–Ω–∏–∫–æ–≤", active: "gram√°tica - vocabulario", image: "üîß"}},
                   "Portugu√™s":
                   { general: { passive: "gram√°tica", active: "gram√°tica"},
                     vocabulary: {passive: "gram√°tica - vocabul√°rio", active: "gram√°tica - vocabulario", image: "üîß"}}
                  };

  const is_grammar = globalThis.tags.includes("type_grammar");
  if (is_grammar) {
    Object.assign(t11n, grammar);
    let elements = document.getElementsByClassName("area");
    if (elements.length == 0) {
      first = document.getElementsByClassName("first-line")[0];
      // Horror
      first.innerHTML =
        first.innerHTML = `<span class="area">${grammar[globalThis.deck[0]]["general"]["passive"]}</span>${first.innerHTML}`;
    }
  }

  const is_translation = globalThis.tags.includes("type_translation"); const is_rewrite = globalThis.tags.includes("type_rewrite");
  const optionals = Array.from(document.getElementsByClassName("optional"));
  if (is_translation) { optionals.forEach(e => e.id = e.id.replace("optional", "translation")); }
  else if (is_rewrite) { optionals.forEach(e => e.id = e.id.replace("optional", "rewrite")); }
  else if (optionals) { optionals.forEach(e => e.remove()); }

  for (const [category, fields] of Object.entries(t11n[globalThis.deck[0]])) {
    for (const [fName, fValue] of Object.entries(fields)) {
      let element = document.getElementById(`${category}:${fName}`);
      var value = fValue;
      if (["passive", "active"].includes(fName)) value = `<span class="field-image">${fields.image}</span> ${value}`;
      if (element) element.innerHTML = value;
    }
  }
}
update();
